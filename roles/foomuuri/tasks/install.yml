---
- name: Determine installation method
  set_fact:
    foomuuri_install_method_resolved: >-
      {{ 
        'aur' if (foomuuri_install_method == 'auto' and ansible_distribution == 'Archlinux') else
        'package' if (foomuuri_install_method == 'auto' and (
            (ansible_distribution == 'Debian' and (ansible_distribution_major_version | int) >= 12) or
            (ansible_distribution == 'Ubuntu' and (ansible_distribution_version is version('24.10', '>=')))
        )) else
        'github' if foomuuri_install_method == 'auto' else
        foomuuri_install_method
      }}

- name: Debug foomuuri_install_method_resolved
  debug:
    var: foomuuri_install_method_resolved

- name: Set OS-specific package list
  set_fact:
    foomuuri_packages_list: "{{ foomuuri_required_packages[ansible_os_family] | default(foomuuri_required_packages['Debian']) }}"

- name: Install required dependencies (Debian/Ubuntu)
  package:
    name: "{{ foomuuri_packages_list }}"
    state: present
  when: ansible_os_family == 'Debian'

- name: Install required dependencies (Arch Linux)
  pacman:
    name: "{{ foomuuri_packages_list }}"
    state: present
  when: ansible_distribution == 'Archlinux' and foomuuri_install_method_resolved != 'aur'

- name: Package installation tasks (Debian/Ubuntu)
  block:
    - name: Add Debian Backports repository
      apt_repository:
        repo: "deb http://deb.debian.org/debian {{ ansible_distribution_release }}-backports main"
        state: present
      when: ansible_distribution == 'Debian'

    - name: Install Foomuuri from package manager
      package:
        name: "{{ foomuuri_package }}"
        state: present
  when: foomuuri_install_method_resolved == "package"

- name: AUR installation tasks (Arch Linux)
  block:
    - name: Check if AUR helper is available
      command: which {{ foomuuri_aur_helper }}
      register: aur_helper_check
      failed_when: false
      changed_when: false

    - name: Install via AUR helper (yay/paru/trizen)
      shell: "{{ foomuuri_aur_helper }} -S --noconfirm foomuuri"
      when: 
        - aur_helper_check.rc == 0
        - foomuuri_aur_helper in ['yay', 'paru', 'trizen']
      become_user: "{{ ansible_user_id }}"

    - name: Manual AUR installation with makepkg
      block:
        - name: Create build directory
          tempfile:
            state: directory
            suffix: aur_build
          register: aur_build_dir

        - name: Clone Foomuuri AUR repository
          git:
            repo: https://aur.archlinux.org/foomuuri.git
            dest: "{{ aur_build_dir.path }}/foomuuri"

        - name: Build package with makepkg
          shell: |
            cd "{{ aur_build_dir.path }}/foomuuri"
            makepkg --noconfirm
          become_user: "{{ ansible_user_id }}"

        - name: Find built package
          find:
            paths: "{{ aur_build_dir.path }}/foomuuri"
            patterns: "foomuuri-*.pkg.tar.zst"
          register: built_package

        - name: Install built package
          pacman:
            name: "{{ built_package.files[0].path }}"
            state: present

        - name: Clean up build directory
          file:
            path: "{{ aur_build_dir.path }}"
            state: absent
      when: 
        - aur_helper_check.rc != 0 or foomuuri_aur_helper == 'makepkg'
  when: foomuuri_install_method_resolved == "aur"

- name: GitHub installation tasks
  block:
    - name: Create temporary directory for Foomuuri installation
      tempfile:
        state: directory
        suffix: foomuuri
      register: foomuuri_temp_dir

    - name: Get latest Foomuuri release information
      uri:
        url: https://api.github.com/repos/FoobarOy/foomuuri/releases/latest
        return_content: yes
      register: foomuuri_release_info
      delegate_to: localhost
      run_once: true

    - name: Download Foomuuri source
      get_url:
        url: "{{ foomuuri_release_info.json.tarball_url }}"
        dest: "{{ foomuuri_temp_dir.path }}/foomuuri.tar.gz"
        mode: '0644'

    - name: Extract Foomuuri source
      unarchive:
        src: "{{ foomuuri_temp_dir.path }}/foomuuri.tar.gz"
        dest: "{{ foomuuri_temp_dir.path }}"
        remote_src: yes
        creates: "{{ foomuuri_temp_dir.path }}/FoobarOy-foomuuri-*"

    - name: Find extracted directory
      find:
        paths: "{{ foomuuri_temp_dir.path }}"
        file_type: directory
        patterns: "FoobarOy-foomuuri-*"
      register: foomuuri_extract_dir

    - name: Build and install Foomuuri from source
      shell: |
        cd "{{ foomuuri_extract_dir.files[0].path }}"
        make
        make install
      args:
        creates: /usr/sbin/foomuuri

    - name: Clean up temporary directory
      file:
        path: "{{ foomuuri_temp_dir.path }}"
        state: absent
  when: foomuuri_install_method_resolved == "github"

- name: Ensure Foomuuri service directory exists
  file:
    path: /etc/foomuuri
    state: directory
    mode: '0755'

- name: Check Foomuuri installation
  command: /usr/sbin/foomuuri --version
  register: foomuuri_version_check
  changed_when: false
  failed_when: foomuuri_version_check.rc != 0

- name: Display Foomuuri version
  debug:
    msg: "Foomuuri version: {{ foomuuri_version_check.stdout }}"
